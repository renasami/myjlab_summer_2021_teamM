
from sqlalchemy import Column, ForeignKey, Integer, String, DateTime
from sqlalchemy.orm import relationship
# from .database import Base
import datetime
# from datetime import datetime
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
import sqlalchemy

# テーブル定義(DBのモデル)
# class テーブル名Table(Base):
    # __tablename__ = 'テーブル名'
    # 定義されている全てのカラムを記述

class BaseBase(object):
    def toDict(self):
        model = {}
        for column in self.__table__.columns:
            model[column.name] = str(getattr(self, column.name))
        return model

Base = sqlalchemy.ext.declarative.declarative_base(cls=BaseBase)


class USERSTable(Base):
    __tablename__ = 'USERS'
    ID = Column(Integer, primary_key=True, autoincrement=True) 
    PASSWORD = Column(String(1000)) 
    CREATED_AT = Column(DateTime, default=datetime.datetime.now(), nullable=False)
    UPDATED_AT = Column(DateTime, default=datetime.datetime.now(), onupdate=datetime.datetime.now(), nullable=False)
    MAIL = Column(String(100))
